{"version":3,"sources":["webpack:///./src/components/Article/index.jsx","webpack:///./src/pages/index.jsx"],"names":["Article","render","title","_","this","props","date","category","categorySlug","description","slug","itemId","className","data-kontent-item-id","dateTime","moment","format","data-kontent-element-codename","key","to","React","Component","IndexRoute","routeData","items","data","kontentItemSiteMetadata","elements","value","subtitle","allKontentItemArticle","nodes","forEach","article","push","name","content","isHomePage","pageQuery"],"mappings":"gLAMMA,G,4GACJC,OAAA,WACE,IAAMC,EAAQC,MAAMC,KAAKC,MAAO,4BAA6B,OACvDC,EAAOH,MAAMC,KAAKC,MAAO,2BAA4B,OACrDE,EAAWJ,MAAMC,KAAKC,MAAO,uDAAwD,OACrFG,EAAeL,MAAMC,KAAKC,MAAO,sDAAuD,OACxFI,EAAcN,MAAMC,KAAKC,MAAO,kCAAmC,OACnEK,EAAI,aAAgBP,MAAMC,KAAKC,MAAO,2BAA4B,OAClEM,EAASR,MAAMC,KAAKC,MAAO,kBAEjC,OACE,yBAAKO,UAAU,UAAUC,uBAAsBF,GAC7C,yBAAKC,UAAU,iBACb,0BACEA,UAAU,qBACVE,SAAUC,IAAOT,GAAMU,OAAO,gBAC9BC,gCAA8B,QAE7BF,IAAOT,GAAMU,OAAO,cAEvB,0BAAMJ,UAAU,0BAChB,0BAAMA,UAAU,yBAAyBM,IAAKV,EAAeS,gCAA8B,YACzF,kBAAC,OAAD,CAAME,GAAE,eAAiBX,EAAjB,IAAkCI,UAAU,+BACjDL,KAIP,wBAAIK,UAAU,iBAAiBK,gCAA8B,SAC3D,kBAAC,OAAD,CAAML,UAAU,sBAAsBO,GAAIT,GACvCR,IAGL,uBAAGU,UAAU,uBAAwBK,gCAA8B,eAAeR,GAClF,kBAAC,OAAD,CAAMG,UAAU,oBAAoBO,GAAIT,GAAxC,U,GAjCcU,IAAMC,YAyCbrB,O,0MCxCTsB,E,kGACJrB,OAAA,WACE,IAAMsB,EAAYnB,KAAKC,MACjBmB,EAAQ,GACRtB,EAAQqB,EAAUE,KAAKC,wBAAwBC,SAASzB,MAAM0B,MAC9DC,EAAWN,EAAUE,KAAKC,wBAAwBC,SAASE,SAASD,MAM1E,OALiBL,EAAUE,KAAKK,sBAAsBC,MAC7CC,SAAQ,SAAAC,GACfT,EAAMU,KAAK,kBAAC,IAAD,CAAST,KAAMQ,EAASf,IAAKe,EAAQN,SAASjB,KAAKkB,YAI9D,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,+BAAQ1B,GACR,0BAAMiC,KAAK,cAAcC,QAASP,KAEpC,kBAAC,IAAD,CAASQ,YAAU,IACnB,yBAAKzB,UAAU,WACb,yBAAKA,UAAU,kBAAkBY,O,GApBpBJ,IAAMC,WA4BhBC,YAER,IAAMgB,EAAS","file":"component---src-pages-index-jsx-1eb0798bec05aa779254.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport * as _ from 'lodash'\nimport './style.scss'\n\nclass Article extends React.Component {\n  render() {\n    const title = _.get(this.props, 'data.elements.title.value', 'N/A')\n    const date = _.get(this.props, 'data.elements.date.value', 'N/A')\n    const category = _.get(this.props, 'data.elements.category.value[0].elements.title.value', 'N/A')\n    const categorySlug = _.get(this.props, 'data.elements.category.value[0].elements.slug.value', 'N/A')\n    const description = _.get(this.props, 'data.elements.description.value', 'N/A')\n    const slug = `/articles/${_.get(this.props, 'data.elements.slug.value', 'N/A')}`\n    const itemId = _.get(this.props, 'data.system.id')\n\n    return (\n      <div className=\"article\" data-kontent-item-id={itemId}>\n        <div className=\"article__meta\">\n          <time\n            className=\"article__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            data-kontent-element-codename=\"date\"\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"article__meta-divider\" />\n          <span className=\"article__meta-category\" key={categorySlug}  data-kontent-element-codename=\"category\">\n            <Link to={`/categories/${categorySlug}/`} className=\"article__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"article__title\" data-kontent-element-codename=\"title\">\n          <Link className=\"article__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"article__description\"  data-kontent-element-codename=\"description\">{description}</p>\n        <Link className=\"article__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Article\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Article from '../components/Article'\nimport Sidebar from '../components/Sidebar'\n\nclass IndexRoute extends React.Component {\n  render() {\n    const routeData = this.props\n    const items = []\n    const title = routeData.data.kontentItemSiteMetadata.elements.title.value\n    const subtitle = routeData.data.kontentItemSiteMetadata.elements.subtitle.value\n    const articles = routeData.data.allKontentItemArticle.nodes\n    articles.forEach(article => {\n      items.push(<Article data={article} key={article.elements.slug.value} />)\n    })\n\n    return (\n      <Layout>\n        <div>\n          <Helmet>\n            <title>{title}</title>\n            <meta name=\"description\" content={subtitle} />\n          </Helmet>\n          <Sidebar isHomePage />\n          <div className=\"content\">\n            <div className=\"content__inner\">{items}</div>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default IndexRoute\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    kontentItemSiteMetadata(system: {codename: {eq: \"site_metadata\"}}) {\n      elements {\n        subtitle {\n          value\n        }\n        title {\n          value\n        }\n      }\n    }\n    allKontentItemArticle(filter: {preferred_language: {eq: \"en-US\"}}) {\n      nodes {\n        system {\n          id\n        }\n        elements {\n          category {\n            value {\n              ... on kontent_item_category {\n                elements {\n                  title {\n                    value\n                  }\n                  slug {\n                    value\n                  }\n                }\n              }\n            }\n          }\n          date {\n            value\n          }\n          description {\n            value\n          }\n          content {\n            value\n          }\n          slug {\n            value\n          }\n          tags {\n            value {\n              ... on kontent_item_tag {\n                elements {\n                  title {\n                    value\n                  }\n                  slug {\n                    value\n                  }\n                }\n              }\n            }\n          }\n          title {\n            value\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}