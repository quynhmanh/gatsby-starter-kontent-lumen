{"version":3,"sources":["webpack:///./src/components/Article/index.jsx","webpack:///./src/components/CategoryTemplateDetails/index.jsx","webpack:///./src/templates/category-template.jsx"],"names":["Article","render","title","_","this","props","date","category","categorySlug","description","slug","itemId","className","data-kontent-item-id","dateTime","moment","format","data-kontent-element-codename","key","to","React","Component","CategoryTemplateDetails","items","pageContext","data","allKontentItemArticle","nodes","forEach","article","push","system","codename","CategoryTemplate","categoryTemplateData","siteTitle","kontentItemSiteMetadata","elements","value","categoryTitle","Layout","Sidebar","pageQuery"],"mappings":"gLAMMA,G,4GACJC,OAAA,WACE,IAAMC,EAAQC,MAAMC,KAAKC,MAAO,4BAA6B,OACvDC,EAAOH,MAAMC,KAAKC,MAAO,2BAA4B,OACrDE,EAAWJ,MAAMC,KAAKC,MAAO,uDAAwD,OACrFG,EAAeL,MAAMC,KAAKC,MAAO,sDAAuD,OACxFI,EAAcN,MAAMC,KAAKC,MAAO,kCAAmC,OACnEK,EAAI,aAAgBP,MAAMC,KAAKC,MAAO,2BAA4B,OAClEM,EAASR,MAAMC,KAAKC,MAAO,kBAEjC,OACE,yBAAKO,UAAU,UAAUC,uBAAsBF,GAC7C,yBAAKC,UAAU,iBACb,0BACEA,UAAU,qBACVE,SAAUC,IAAOT,GAAMU,OAAO,gBAC9BC,gCAA8B,QAE7BF,IAAOT,GAAMU,OAAO,cAEvB,0BAAMJ,UAAU,0BAChB,0BAAMA,UAAU,yBAAyBM,IAAKV,EAAeS,gCAA8B,YACzF,kBAAC,OAAD,CAAME,GAAE,eAAiBX,EAAjB,IAAkCI,UAAU,+BACjDL,KAIP,wBAAIK,UAAU,iBAAiBK,gCAA8B,SAC3D,kBAAC,OAAD,CAAML,UAAU,sBAAsBO,GAAIT,GACvCR,IAGL,uBAAGU,UAAU,uBAAwBK,gCAA8B,eAAeR,GAClF,kBAAC,OAAD,CAAMG,UAAU,oBAAoBO,GAAIT,GAAxC,U,GAjCcU,IAAMC,YAyCbrB,O,0MCtBAsB,E,kGArBbrB,OAAA,WACE,IAAMsB,EAAQ,GACNhB,EAAaH,KAAKC,MAAMmB,YAAxBjB,SAMR,OALiBH,KAAKC,MAAMoB,KAAKC,sBAAsBC,MAC9CC,SAAQ,SAAAC,GACfN,EAAMO,KAAK,kBAAC9B,EAAA,EAAD,CAASyB,KAAMI,EAASX,IAAKW,EAAQE,OAAOC,eAIvD,yBAAKpB,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAeL,GAC7B,yBAAKK,UAAU,cAAcW,O,GAdHH,IAAMC,WCItCY,E,kGACJhC,OAAA,WACE,IAAMiC,EAAuB9B,KAAKC,MAC5B8B,EAAYD,EAAqBT,KAAKW,wBAAwBC,SAASnC,MAAMoC,MAC7EC,EAAgBL,EAAqBV,YAAYe,cAEvD,OACE,kBAACC,EAAA,EAAD,KACE,6BACE,kBAAC,IAAD,CAAQtC,MAAUqC,EAAL,MAAwBJ,IACrC,kBAACM,EAAA,EAAD,MACA,kBAAC,EAA4BP,M,GAXRd,IAAMC,WAoBxBqB,GAFET,YAEO","file":"component---src-templates-category-template-jsx-14ce6122913861242983.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport moment from 'moment'\r\nimport * as _ from 'lodash'\r\nimport './style.scss'\r\n\r\nclass Article extends React.Component {\r\n  render() {\r\n    const title = _.get(this.props, 'data.elements.title.value', 'N/A')\r\n    const date = _.get(this.props, 'data.elements.date.value', 'N/A')\r\n    const category = _.get(this.props, 'data.elements.category.value[0].elements.title.value', 'N/A')\r\n    const categorySlug = _.get(this.props, 'data.elements.category.value[0].elements.slug.value', 'N/A')\r\n    const description = _.get(this.props, 'data.elements.description.value', 'N/A')\r\n    const slug = `/articles/${_.get(this.props, 'data.elements.slug.value', 'N/A')}`\r\n    const itemId = _.get(this.props, 'data.system.id')\r\n\r\n    return (\r\n      <div className=\"article\" data-kontent-item-id={itemId}>\r\n        <div className=\"article__meta\">\r\n          <time\r\n            className=\"article__meta-time\"\r\n            dateTime={moment(date).format('MMMM D, YYYY')}\r\n            data-kontent-element-codename=\"date\"\r\n          >\r\n            {moment(date).format('MMMM YYYY')}\r\n          </time>\r\n          <span className=\"article__meta-divider\" />\r\n          <span className=\"article__meta-category\" key={categorySlug}  data-kontent-element-codename=\"category\">\r\n            <Link to={`/categories/${categorySlug}/`} className=\"article__meta-category-link\">\r\n              {category}\r\n            </Link>\r\n          </span>\r\n        </div>\r\n        <h2 className=\"article__title\" data-kontent-element-codename=\"title\">\r\n          <Link className=\"article__title-link\" to={slug}>\r\n            {title}\r\n          </Link>\r\n        </h2>\r\n        <p className=\"article__description\"  data-kontent-element-codename=\"description\">{description}</p>\r\n        <Link className=\"article__readmore\" to={slug}>\r\n          Read\r\n        </Link>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Article\r\n","import React from 'react'\r\nimport Article from '../Article'\r\n\r\nclass CategoryTemplateDetails extends React.Component {\r\n  render() {\r\n    const items = []\r\n    const { category } = this.props.pageContext\r\n    const articles = this.props.data.allKontentItemArticle.nodes\r\n    articles.forEach(article => {\r\n      items.push(<Article data={article} key={article.system.codename} />)\r\n    })\r\n\r\n    return (\r\n      <div className=\"content\">\r\n        <div className=\"content__inner\">\r\n          <div className=\"page\">\r\n            <h1 className=\"page__title\">{category}</h1>\r\n            <div className=\"page__body\">{items}</div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTemplateDetails\r\n","import React from 'react'\r\nimport Helmet from 'react-helmet'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/Layout'\r\nimport Sidebar from '../components/Sidebar'\r\nimport CategoryTemplateDetails from '../components/CategoryTemplateDetails'\r\n\r\nclass CategoryTemplate extends React.Component {\r\n  render() {\r\n    const categoryTemplateData = this.props\r\n    const siteTitle = categoryTemplateData.data.kontentItemSiteMetadata.elements.title.value\r\n    const categoryTitle = categoryTemplateData.pageContext.categoryTitle\r\n\r\n    return (\r\n      <Layout>\r\n        <div>\r\n          <Helmet title={`${categoryTitle} - ${siteTitle}`} />\r\n          <Sidebar />\r\n          <CategoryTemplateDetails {...categoryTemplateData} />\r\n        </div>\r\n      </Layout>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CategoryTemplate\r\n\r\nexport const pageQuery = graphql`\r\n  query CategoryPage($categoryCodename: String) {\r\n    kontentItemSiteMetadata(system: {codename: {eq: \"site_metadata\"}}) {\r\n      elements {\r\n        title {\r\n          value\r\n        }\r\n      }\r\n    }\r\n    allKontentItemArticle(filter: {elements: {category: {value: {elemMatch: {system: {codename: {eq: $categoryCodename}}}}}}, preferred_language: {eq: \"en-US\"}}) {\r\n      nodes {\r\n        system {\r\n          codename\r\n        }\r\n        elements {\r\n          category {\r\n            value {\r\n              ... on kontent_item_category {\r\n                elements {\r\n                  title {\r\n                    value\r\n                  }\r\n                  slug {\r\n                    value\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          date {\r\n            value\r\n          }\r\n          description {\r\n            value\r\n          }\r\n          content {\r\n            value\r\n          }\r\n          slug {\r\n            value\r\n          }\r\n          tags {\r\n            value {\r\n              ... on kontent_item_tag {\r\n                elements {\r\n                  title {\r\n                    value\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n          title {\r\n            value\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}