{"version":3,"sources":["webpack:///./src/components/Article/index.jsx","webpack:///./src/components/TagTemplateDetails/index.jsx","webpack:///./src/templates/tag-template.jsx"],"names":["Article","render","title","_","this","props","date","category","categorySlug","description","slug","itemId","className","data-kontent-item-id","dateTime","moment","format","data-kontent-element-codename","key","to","React","Component","TagTemplateDetails","items","tagTitle","pageContext","data","allKontentItemArticle","nodes","forEach","article","push","elements","value","TagTemplate","pageTemplateData","kontentItemSiteMetadata","Layout","Sidebar","pageQuery"],"mappings":"gLAMMA,G,4GACJC,OAAA,WACE,IAAMC,EAAQC,MAAMC,KAAKC,MAAO,4BAA6B,OACvDC,EAAOH,MAAMC,KAAKC,MAAO,2BAA4B,OACrDE,EAAWJ,MAAMC,KAAKC,MAAO,uDAAwD,OACrFG,EAAeL,MAAMC,KAAKC,MAAO,sDAAuD,OACxFI,EAAcN,MAAMC,KAAKC,MAAO,kCAAmC,OACnEK,EAAI,aAAgBP,MAAMC,KAAKC,MAAO,2BAA4B,OAClEM,EAASR,MAAMC,KAAKC,MAAO,kBAEjC,OACE,yBAAKO,UAAU,UAAUC,uBAAsBF,GAC7C,yBAAKC,UAAU,iBACb,0BACEA,UAAU,qBACVE,SAAUC,IAAOT,GAAMU,OAAO,gBAC9BC,gCAA8B,QAE7BF,IAAOT,GAAMU,OAAO,cAEvB,0BAAMJ,UAAU,0BAChB,0BAAMA,UAAU,yBAAyBM,IAAKV,EAAeS,gCAA8B,YACzF,kBAAC,OAAD,CAAME,GAAE,eAAiBX,EAAjB,IAAkCI,UAAU,+BACjDL,KAIP,wBAAIK,UAAU,iBAAiBK,gCAA8B,SAC3D,kBAAC,OAAD,CAAML,UAAU,sBAAsBO,GAAIT,GACvCR,IAGL,uBAAGU,UAAU,uBAAwBK,gCAA8B,eAAeR,GAClF,kBAAC,OAAD,CAAMG,UAAU,oBAAoBO,GAAIT,GAAxC,U,GAjCcU,IAAMC,YAyCbrB,O,0MCjBAsB,E,kGA1BbrB,OAAA,WACE,IAAMsB,EAAQ,GACRC,EAAWpB,KAAKC,MAAMoB,YAAYD,SAOxC,OANiBpB,KAAKC,MAAMqB,KAAKC,sBAAsBC,MAE9CC,SAAQ,SAAAC,GACfP,EAAMQ,KAAK,kBAAC/B,EAAA,EAAD,CAAS0B,KAAMI,EAASZ,IAAKY,EAAQE,SAAStB,KAAKuB,YAI9D,yBAAKrB,UAAU,WACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,QACb,wBAAIA,UAAU,eAAd,2BAEGY,EAFH,KAKA,yBAAKZ,UAAU,cAAcW,O,GAnBRH,IAAMC,WCIjCa,E,kGACJjC,OAAA,WACE,IAAMkC,EAAmB/B,KAAKC,MACxBH,EAAQiC,EAAiBT,KAAKU,wBAAwBJ,SAAS9B,MAAM+B,MACrET,EAAWW,EAAiBV,YAAYD,SAE9C,OACE,kBAACa,EAAA,EAAD,KACE,6BACE,kBAAC,IAAD,CAAQnC,MAAK,2BAA6BsB,EAA7B,OAA4CtB,IACzD,kBAACoC,EAAA,EAAD,MACA,kBAAC,EAAuBH,M,GAXRf,IAAMC,WAoBnBkB,GAFEL,YAEO","file":"component---src-templates-tag-template-jsx-5add37f744f53a46bc5b.js","sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport moment from 'moment'\nimport * as _ from 'lodash'\nimport './style.scss'\n\nclass Article extends React.Component {\n  render() {\n    const title = _.get(this.props, 'data.elements.title.value', 'N/A')\n    const date = _.get(this.props, 'data.elements.date.value', 'N/A')\n    const category = _.get(this.props, 'data.elements.category.value[0].elements.title.value', 'N/A')\n    const categorySlug = _.get(this.props, 'data.elements.category.value[0].elements.slug.value', 'N/A')\n    const description = _.get(this.props, 'data.elements.description.value', 'N/A')\n    const slug = `/articles/${_.get(this.props, 'data.elements.slug.value', 'N/A')}`\n    const itemId = _.get(this.props, 'data.system.id')\n\n    return (\n      <div className=\"article\" data-kontent-item-id={itemId}>\n        <div className=\"article__meta\">\n          <time\n            className=\"article__meta-time\"\n            dateTime={moment(date).format('MMMM D, YYYY')}\n            data-kontent-element-codename=\"date\"\n          >\n            {moment(date).format('MMMM YYYY')}\n          </time>\n          <span className=\"article__meta-divider\" />\n          <span className=\"article__meta-category\" key={categorySlug}  data-kontent-element-codename=\"category\">\n            <Link to={`/categories/${categorySlug}/`} className=\"article__meta-category-link\">\n              {category}\n            </Link>\n          </span>\n        </div>\n        <h2 className=\"article__title\" data-kontent-element-codename=\"title\">\n          <Link className=\"article__title-link\" to={slug}>\n            {title}\n          </Link>\n        </h2>\n        <p className=\"article__description\"  data-kontent-element-codename=\"description\">{description}</p>\n        <Link className=\"article__readmore\" to={slug}>\n          Read\n        </Link>\n      </div>\n    )\n  }\n}\n\nexport default Article\n","import React from 'react'\nimport Article from '../Article'\n\nclass TagTemplateDetails extends React.Component {\n  render() {\n    const items = []\n    const tagTitle = this.props.pageContext.tagTitle\n    const articles = this.props.data.allKontentItemArticle.nodes\n\n    articles.forEach(article => {\n      items.push(<Article data={article} key={article.elements.slug.value} />)\n    })\n\n    return (\n      <div className=\"content\">\n        <div className=\"content__inner\">\n          <div className=\"page\">\n            <h1 className=\"page__title\">\n              All Articles tagged as &quot;\n              {tagTitle}\n              &quot;\n            </h1>\n            <div className=\"page__body\">{items}</div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default TagTemplateDetails\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Sidebar from '../components/Sidebar'\nimport TagTemplateDetails from '../components/TagTemplateDetails'\n\nclass TagTemplate extends React.Component {\n  render() {\n    const pageTemplateData = this.props\n    const title = pageTemplateData.data.kontentItemSiteMetadata.elements.title.value\n    const tagTitle = pageTemplateData.pageContext.tagTitle\n\n    return (\n      <Layout>\n        <div>\n          <Helmet title={`All Articles tagged as \"${tagTitle}\" - ${title}`} />\n          <Sidebar />\n          <TagTemplateDetails {...pageTemplateData} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query TagPage($tagCodename: String) {\n    kontentItemSiteMetadata(system: {codename: {eq: \"site_metadata\"}}) {\n      elements {\n        title {\n          value\n        }\n      }\n    }\n    allKontentItemArticle(filter: {elements: {tags: {value: {elemMatch: {system: {codename: {eq: $tagCodename}}}}}}, preferred_language: {eq: \"en-US\"}}, sort: {fields: elements___date___value, order: DESC}) {\n      nodes {\n        elements {\n          category {\n            value {\n              ... on kontent_item_category {\n                elements {\n                  title {\n                    value\n                  }\n                  slug {\n                    value\n                  }\n                }\n              }\n            }\n          }\n          date {\n            value\n          }\n          description {\n            value\n          }\n          content {\n            value\n          }\n          slug {\n            value\n          }\n          tags {\n            value {\n              ... on kontent_item_tag {\n                elements {\n                  title {\n                    value\n                  }\n                }\n              }\n            }\n          }\n          title {\n            value\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}